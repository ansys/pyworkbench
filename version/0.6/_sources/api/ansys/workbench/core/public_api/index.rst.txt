





The ``public_api.py`` module
============================

.. py:module:: ansys.workbench.core.public_api


Summary
-------








.. py:currentmodule:: public_api
.. tab-set::







    .. tab-item:: Functions

        .. list-table::
          :header-rows: 0
          :widths: auto


          * - :py:obj:`~launch_workbench`
            - Launch PyWorkbench server on the local or a remote Windows machine.


          * - :py:obj:`~connect_workbench`
            - Create a PyWorkbench client that connects to an already running Workbench server.

















Description
-----------

Module for starting PyWorkbench.

..
    !! processed by numpydoc !!






Module detail
-------------

.. py:function:: launch_workbench(release='242', client_workdir=None, server_workdir=None, host=None, username=None, password=None)

   
   Launch PyWorkbench server on the local or a remote Windows machine.

   This method launch a Workbench server on the local or a remote Windows machine and creates
   a PyWorkbench client that connects to the server.

   :Parameters:

       **release** : :class:`python:str`, default: "251"
           Workbench release to launch.

       **client_workdir** : :class:`python:str`, default: :data:`python:None`
           Path to a writable directory on the client computer. The default is ``None``,
           in which case the system temp directory is used.

       **server_workdir** : :class:`python:str`, :data:`python:None`
           Path to a writable directory on the server computer. The default is ``None``,
           in which case the user preference for the Workbench temporary file folder is used.

       **host** : :class:`python:str`, :data:`python:None`
           Server computer's name or IP address. The default is ``None`` for launching on the
           local computer.

       **username** : :class:`python:str`, :data:`python:None`
           User's login name on the server computer. The default is ``None`` for launching on
           the local computer.

       **password** : :class:`python:str`, :data:`python:None`
           User's password on the server computer. The default is ``None`` for launching on
           the local computer.

   :Returns:

       :obj:`WorkbenchClient`
           Instance of the PyWorkbench client that is connected to the launched server.










   .. rubric:: Examples

   Launch a server on the local computer and use the ``wb`` variable to hold the returned client.

   >>> from ansys.workbench.core import launch_workbench
   >>> wb = launch_workbench()



   ..
       !! processed by numpydoc !!

.. py:function:: connect_workbench(port, client_workdir=None, host=None)

   
   Create a PyWorkbench client that connects to an already running Workbench server.


   :Parameters:

       **port** : :class:`python:int`
           Port used by the server.

       **client_workdir** : :class:`python:str`, default: :data:`python:None`
           Path to a writable directory on the client computer. The default is ``None``,
           in which case the system temp directory is used.

       **host** : :class:`python:str`, default: :data:`python:None`
           Server computer's name or IP address. The default is ``None`` for the local computer.

   :Returns:

       :obj:`WorkbenchClient`
           Instance of the PyWorkbench client that is connected to the server.










   .. rubric:: Examples

   Connect to a server at port 32588 on localhost and use the ``wb`` variable to hold the
   returned client.

   >>> from ansys.workbench.core import connect_workbench
   >>> wb = connect_workbench(port = 32588)



   ..
       !! processed by numpydoc !!



