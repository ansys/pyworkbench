





The ``launch_workbench.py`` module
==================================

.. py:module:: ansys.workbench.core.launch_workbench


Summary
-------








.. py:currentmodule:: launch_workbench
.. tab-set::







    .. tab-item:: Functions

        .. list-table::
          :header-rows: 0
          :widths: auto


          * - :py:obj:`~launch_workbench`
            - Launch PyWorkbench server on local or remote Windows machine and create




















Module detail
-------------

.. py:function:: launch_workbench(release='241', client_workdir=None, server_workdir=None, host=None, username=None, password=None)

   
   Launch PyWorkbench server on local or remote Windows machine and create
      a PyWorkbench client that connects to the server.


   :Parameters:

       **release** : :class:`python:str`, :obj:`optional`
           specify a Workbench release to launch (default: "241")

       **client_workdir** : :class:`python:str`, :obj:`optional`
           path to a writable directory on the client computer
           (default: the system temp directory)

       **server_workdir** : :class:`python:str`, :obj:`optional`
           path to a writable directory on the server computer
           (default: the user preference for Workbench temporary file folder)

       **host** : :class:`python:str`, :obj:`optional`
           the server computer's name or IP address (default: None for launching on the local computer)

       **username** : :class:`python:str`, :obj:`optional`
           user's login name on the server computer (default: None for launching on the local computer)

       **password** : :class:`python:str`, :obj:`optional`
           user's password on the server computer (default: None for launching on the local computer)

   :Returns:

       :obj:`LaunchWorkbench`
           An instance of PyWorkbench client that is connected to the launched server.










   .. rubric:: Examples

   Launch a server on the local computer and variable "wb" holds the returned client.

   >>> from ansys.workbench.core import launch_workbench
   >>> wb = launch_workbench()



   ..
       !! processed by numpydoc !!



